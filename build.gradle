plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'eu.accesa.internship.epidemicrelief'
version = '1.0.0-SNAPSHOT'

// tag::configurations[]
configurations {
    jaxb
}
// end::configurations[]

repositories {
    mavenCentral()
}

// tag::wsdl[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "http://localhost:8082/ws/products.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

//            xjc(destdir: sourcesDir, schema: schema,
//                    package: "eu.accesa.internship.wsdl") {
//                arg(value: "-wsdl")
//                produces(dir: sourcesDir, includes: "**/*.java")
//            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::wsdl[]

dependencies {
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:1.7.1'
    implementation 'io.github.resilience4j:resilience4j-annotations:1.7.1'

    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.3.4.RELEASE'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.38'
    implementation 'javax.servlet:jstl:1.2'
    implementation 'mysql:mysql-connector-java:8.0.21'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.json:json:20171018'
    implementation group: 'org.springframework.statemachine', name: 'spring-statemachine-core', version: '3.2.0'


    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.4.RELEASE'
    testImplementation 'com.h2database:h2:1.4.194'

// tag::dependency[]
    implementation('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.ws:spring-ws-core'
    // For Java 11:
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    implementation(files(genJaxb.classesDir).builtBy(genJaxb))
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'junit:junit:4.13.1'

    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile "org.springframework.security:spring-security-web"
    compile "org.springframework.security:spring-security-config"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation group: 'org.springframework.security', name: 'spring-security-taglibs', version: '5.4.1'


}

test {
    useJUnitPlatform()
}

// tag::bootjar[]
bootJar {
    baseName = 'gs-consuming-web-service'
    version = '0.0.1'
}
// end::bootjar[]